name: Build

on:
  workflow_call:
    inputs:
      release:
        required: true
        type: boolean
        default: false
        
jobs:
  generate:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Generate Clients
        run: mvn --batch-mode package
      - uses: actions/upload-artifact@v4
        with:
          name: java-code
          path: java/
          retention-days: 1 
          include-hidden-files: true 
      - uses: actions/upload-artifact@v4
        with:
          name: csharp-code
          path: csharp/
          retention-days: 1 
          include-hidden-files: true
      - uses: actions/upload-artifact@v4
        with:
          name: javascript-code
          path: javascript/
          retention-days: 1 
          include-hidden-files: true
      - uses: actions/upload-artifact@v4
        with:
          name: rust-code
          path: rust/
          retention-days: 1 
          include-hidden-files: true 
          

  build-java:
    needs: generate
    runs-on: ubuntu-latest
    steps:
      - name: Download generated sources
        uses: actions/download-artifact@v4
        with:
          name: java-code
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build Java client
        run: mvn --batch-mode verify
        
      - uses: actions/upload-artifact@v4
        with:
          name: api-client-java
          path: de.fxworld.euvdapi.client/target/
          retention-days: 14
      
      - name: Publish Java client
        if: ${{ inputs.release == 'true' }}
        run: mvn --batch-mode deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  # Build instructions: https://learn.microsoft.com/en-us/dotnet/devops/dotnet-test-github-action        
  build-csharp:
    needs: generate
    #runs-on: ubuntu-latest
    runs-on: windows-latest
    defaults:
      run:
        working-directory: De.FxWorld.EuvdApi.Client
    env:
      NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}        
    steps:
      - name: Download generated sources
        uses: actions/download-artifact@v4
        with:
          name: csharp-code
      - name: Setup .NET 6.x
        uses: actions/setup-dotnet@v4        
        with:
          # Semantic version range syntax or exact version of a dotnet version
          dotnet-version: '6.x'
          source-url: https://nuget.pkg.github.com/fx-world/index.json
      - name: Install dependencies
        run: dotnet restore
      - name: Build Debug
        run: dotnet build --no-restore
      - name: Build Release
        run: dotnet build --no-restore --configuration Release
      - name: Test with the dotnet CLI
        run: dotnet test  --no-restore --verbosity normal
                
      - uses: actions/upload-artifact@v4
        with:
          name: api-client-csharp
          path: De.FxWorld.EuvdApi.Client/src/De.FxWorld.EuvdApi.Client/bin/
          retention-days: 14

      # Publishing: https://docs.github.com/en/actions/use-cases-and-examples/building-and-testing/building-and-testing-net
      - name: Publish the package to GPR
        if: ${{ inputs.release == 'true' }}
        run: dotnet nuget push De.FxWorld.EuvdApi.Client/src/De.FxWorld.EuvdApi.Client/bin/Release/*.nupkg

  build-javascript:
    needs: generate
    runs-on: ubuntu-latest
    #defaults:
    #  run:
    #    working-directory: euvd_api
    steps:
      - name: Download generated sources
        uses: actions/download-artifact@v4
        with:
          name: javascript-code
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          #cache: 'npm'
      - run: npm install
      - run: npm run build
      - run: npm test

      - name: Create target directory
        run: mkdir target
      - run: npm pack  --pack-destination="target"
      - uses: actions/upload-artifact@v4
        with:
          name: api-client-javascript
          path:  target/
          retention-days: 14

  build-rust:
    runs-on: ubuntu-latest
    needs: generate
    env:
      CARGO_TERM_COLOR: always
    steps:
      - name: Download generated sources
        uses: actions/download-artifact@v4
        with:
          name: rust-code
#      - name: Install Rust
#        run: rustup update stable --no-self-update && rustup default stable
#        shell: bash
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: cargo test --verbose


